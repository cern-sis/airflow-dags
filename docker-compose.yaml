version: "3.8"
x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile.test
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    # For backward compatibility, with Airflow <2.3
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    IOP_FTP_HOST: "sftp"
    SPRINGER_FTP_HOST: "sftp"
    OUP_FTP_HOST: "ftp"
    S3_ENDPOINT: "http://s3:9000"
    SPRINGER_FTP_PORT: 22
    IOP_FTP_PORT: 22
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./airflow.cfg:/opt/airflow/airflow.cfg
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on: &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: docker.io/library/postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  redis:
    image: docker.io/library/redis:latest
    expose:
      - 6379
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always

  sftp:
    image: atmoz/sftp
    ports:
      - "2222:22"
    volumes:
      - ./data:/home/airflow/upload
    command: airflow:airflow:::upload
    restart: always

  ftp:
    container_name: ftp-server
    image: garethflowers/ftp-server
    environment:
      - FTP_USER=airflow
      - FTP_PASS=airflow
    restart: always
    ports:
      - "20-21:20-21/tcp"
      - "40000-40009:40000-40009/tcp" # passive mode
    volumes:
      - ./data:/home/airflow/upload

  s3:
    image: minio/minio
    expose:
      - 9000
      - 9001
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=airflow
      - MINIO_ROOT_PASSWORD=Airflow01
    command: server /data --console-address ":9001"

  create_buckets:
    image: minio/mc
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c " sleep 10; /usr/bin/mc alias set airflow http://s3:9000 airflow Airflow01; /usr/bin/mc mb airflow/springer; /usr/bin/mc mb airflow/aps; /usr/bin/mc mb airflow/hindawi; /usr/bin/mc mb airflow/iop; /usr/bin/mc mb airflow/elsevier; /usr/bin/mc mb airflow/oup; exit 0; "
volumes:
  postgres-db-volume:
